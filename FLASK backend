from flask import Flask, render_template, request, redirect, url_for, session, flash, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from datetime import timedelta

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your-secret-key'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///database.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.permanent_session_lifetime = timedelta(days=5)

db = SQLAlchemy(app)
bcrypt = Bcrypt(app)

# User model
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100))
    age = db.Column(db.Integer)
    contact = db.Column(db.String(15))
    address = db.Column(db.String(200))
    role = db.Column(db.String(20))
    needs = db.Column(db.String(300))  # For refugees
    skills = db.Column(db.String(300))  # For volunteers
    availability = db.Column(db.String(200))  # For volunteers
    password = db.Column(db.String(100))  # Optional: For login feature

@app.before_first_request
def create_tables():
    db.create_all()

# Home route
@app.route('/')
def home():
    return render_template("index.html")

# Registration API
@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    name = data.get("name")
    age = data.get("age")
    contact = data.get("contact")
    role = data.get("role")
    address = data.get("address", "")
    needs = data.get("needs", "")
    skills = data.get("skills", "")
    availability = data.get("availability", "")
    
    new_user = User(name=name, age=age, contact=contact, address=address, 
                    needs=needs, skills=skills, availability=availability, role=role)
    db.session.add(new_user)
    db.session.commit()
    return jsonify({"message": "User registered successfully", "id": new_user.id})

# Example dashboard route
@app.route('/dashboard')
def dashboard():
    return render_template("dashboard.html")

if __name__ == '__main__'
    app.run(debug=True)
